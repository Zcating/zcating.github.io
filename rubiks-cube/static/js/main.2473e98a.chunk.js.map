{"version":3,"sources":["modules/rubiks-cube-viewer.ts","App.tsx","registerServiceWorker.ts","index.tsx"],"names":["PI_2","Math","PI","RubiksCubeViewer","element","scene","engine","camera","light1","light2","cubes","_multiMaterial","_didFinish","_operationQueue","_isRunning","resizeFn","resize","canvas","document","createElement","style","position","height","width","appendChild","this","BABYLON","useRightHandedSystem","Zero","lowerRadiusLimit","upperRadiusLimit","useBouncingBehavior","attachControl","minZ","wheelDeltaPercentage","pinchDeltaPercentage","wheelPrecision","pinchPrecision","_generateRubiksCube","runRenderLoop","render","window","addEventListener","subMaterials","push","diffuseTexture","colorTexture","removeEventListener","dispose","clockwise","coefficient","_rotate","value","z","ratio","_rotateAroundAxisZ","clockwize","times","y","_rotateAroundAxisY","x","_rotateAroundAxisX","operationQueue","doingOperation","operationChar","handler","setInterval","undefined","clearInterval","rotateRight","rotateLeft","rotateUp","rotateFront","rotateDown","rotateBack","splice","box","CreateBox","material","multiMaterial","subMeshes","verticesCount","getTotalVertices","set","color","context","getContext","fillStyle","fillRect","rect","lineJoin","lineWidth","colorString","toString","strokeStyle","stroke","fill","toDataURL","filter","rotation","objects","_anmate","object","during","animating","requestAnimationFrame","timestamp","_animationCore","startTimestamp","previousTimestamp","currentTimestamp","cancelAnimationFrame","rad","cos","sin","App","props","viewer","allOperations","disrupt","steps","index","number","floor","random","operation","setState","startAOperationQueue","reset","event","textContent","target","operate","state","getElementById","destroy","className","id","onClick","React","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","URL","process","origin","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.2473e98a.chunk.js","sourcesContent":["import * as BABYLON from 'babylonjs';\r\n\r\nconst THRESHOLD = 0.5;\r\nconst PI_2 = Math.PI / 2;\r\n// const PI_4 = Math.PI / 4;\r\n// const SQRT_2 = Math.sqrt(2);\r\n\r\nexport class RubiksCubeViewer {\r\n\r\n    scene: BABYLON.Scene;\r\n    engine: BABYLON.Engine;\r\n    camera: BABYLON.ArcRotateCamera;\r\n    light1: BABYLON.HemisphericLight;\r\n    light2: BABYLON.HemisphericLight;\r\n    cubes: BABYLON.Mesh[] = [];\r\n\r\n    // didFinish: boolean = false;\r\n\r\n    private _multiMaterial?: BABYLON.MultiMaterial;\r\n\r\n    private _didFinish = true;\r\n\r\n    private _operationQueue: string[] = [];\r\n\r\n    private _isRunning = false;\r\n\r\n\r\n    private get multiMaterial() : BABYLON.MultiMaterial {\r\n        if (!this._multiMaterial) {\r\n            this._multiMaterial = new BABYLON.MultiMaterial('multi', this.scene);\r\n\r\n            this._multiMaterial.subMaterials.push(\r\n                // orange 0xF76102\r\n                new BABYLON.StandardMaterial('orange', this.scene),\r\n                // red 0x920702\r\n                new BABYLON.StandardMaterial('red', this.scene),\r\n                // yellow 0xFFFC05\r\n                new BABYLON.StandardMaterial('yellow', this.scene),\r\n                // white 0xFFFFFF\r\n                new BABYLON.StandardMaterial('white', this.scene),\r\n                // green 0x179505\r\n                new BABYLON.StandardMaterial('green', this.scene),\r\n                // blue 0x1A11FF\r\n                new BABYLON.StandardMaterial('blue', this.scene),\r\n            );\r\n            const subMaterials = this._multiMaterial.subMaterials as BABYLON.StandardMaterial[];\r\n            subMaterials[0]!.diffuseTexture = this.colorTexture(0x179505);\r\n            subMaterials[1]!.diffuseTexture = this.colorTexture(0x1A11FF);\r\n            subMaterials[2]!.diffuseTexture = this.colorTexture(0xF76102);\r\n            subMaterials[3]!.diffuseTexture = this.colorTexture(0x920702);\r\n            subMaterials[4]!.diffuseTexture = this.colorTexture(0xFFFC05);\r\n            subMaterials[5]!.diffuseTexture = this.colorTexture(0xFFFFFF);\r\n        }\r\n        return this._multiMaterial;\r\n    }\r\n\r\n    private resizeFn = () => {\r\n        this.engine.resize();\r\n    }\r\n\r\n    constructor(element: HTMLElement) {\r\n        const canvas = document.createElement('canvas');\r\n        canvas.style.position = 'absolute';\r\n        canvas.style.height = '100%';\r\n        canvas.style.width = '100%';\r\n        element.appendChild(canvas);\r\n        this.engine = new BABYLON.Engine(canvas, true, {}, true);\r\n        this.scene = new BABYLON.Scene(this.engine);\r\n        this.scene.useRightHandedSystem = true;\r\n        this.camera = new BABYLON.ArcRotateCamera('camera', 0, 0, 10, BABYLON.Vector3.Zero(), this.scene);\r\n        this.camera.position = new BABYLON.Vector3(4, 4, 4);\r\n        this.camera.lowerRadiusLimit = 4;\r\n        this.camera.upperRadiusLimit = 20;\r\n        this.camera.useBouncingBehavior = false;\r\n        this.camera.attachControl(canvas);\r\n        this.camera.minZ = 0.001;\r\n        this.camera.wheelDeltaPercentage = 0.01;\r\n        this.camera.pinchDeltaPercentage = 0.01;\r\n        this.camera.wheelPrecision = 500;\r\n        this.camera.pinchPrecision = 500;\r\n\r\n        this._generateRubiksCube();\r\n\r\n        this.light1 = new BABYLON.HemisphericLight('light', new BABYLON.Vector3(0, 0, 1), this.scene);\r\n        this.light2 = new BABYLON.HemisphericLight('light', new BABYLON.Vector3(0, 0, -1), this.scene);\r\n\r\n        this.engine.runRenderLoop(() => {\r\n            this.scene.render();\r\n        });\r\n\r\n        window.addEventListener('resize', this.resizeFn);\r\n    }\r\n\r\n    destroy() {\r\n        window.removeEventListener('resize', this.resizeFn);\r\n        this.engine.dispose();\r\n        this.scene.dispose();\r\n    }\r\n\r\n    public reset() {\r\n        // running state can't reset.\r\n        if (this._isRunning) {\r\n            return;\r\n        }\r\n        this._generateRubiksCube();\r\n    }\r\n\r\n\r\n    public rotateFront(clockwise: boolean, times: number = 1) : void {\r\n        const coefficient = clockwise ? -1 : 1;\r\n        this._rotate((value)=>{\r\n            // get all front block\r\n            return value.position.z > THRESHOLD;\r\n        }, (value, ratio)=>{\r\n            RubiksCubeViewer._rotateAroundAxisZ(value, coefficient * ratio * PI_2);\r\n        });\r\n    }\r\n\r\n    public rotateBack(clockwize: boolean, times: number = 1) : void {\r\n        const coefficient = clockwize ? 1 : -1;\r\n        this._rotate((value)=>{\r\n            // get all back block\r\n            return value.position.z < -THRESHOLD;\r\n        }, (value, ratio)=>{\r\n            RubiksCubeViewer._rotateAroundAxisZ(value, coefficient * ratio * PI_2 * times);\r\n        });\r\n    }\r\n\r\n    public rotateUp(clockwize: boolean, times: number = 1) : void {\r\n        const coefficient = clockwize ? 1 : -1;\r\n        this._rotate((value)=>{\r\n            // get all up block\r\n            return value.position.y > THRESHOLD;\r\n        }, (value, ratio)=>{\r\n            RubiksCubeViewer._rotateAroundAxisY(value, coefficient * ratio * PI_2);\r\n        });\r\n    }\r\n\r\n    public rotateDown(clockwize: boolean, times: number = 1) : void {\r\n        const coefficient = clockwize ? -1 : 1;\r\n        this._rotate((value)=>{\r\n            // get all down block\r\n            return value.position.y < -THRESHOLD;\r\n        }, (value, ratio)=>{\r\n            RubiksCubeViewer._rotateAroundAxisY(value, coefficient * ratio * PI_2);\r\n        });\r\n    }\r\n\r\n    public rotateLeft(clockwize: boolean, times: number = 1) : void {\r\n        const coefficient = clockwize ? 1 : -1;\r\n        this._rotate((value)=>{\r\n             // get all left block\r\n            return value.position.x < -THRESHOLD;\r\n        }, (value, ratio)=>{\r\n            RubiksCubeViewer._rotateAroundAxisX(value, coefficient * ratio * PI_2);\r\n        });\r\n    }\r\n\r\n    public rotateRight(clockwize: boolean, times: number = 1) : void {\r\n        const coefficient = clockwize ? -1 : 1;\r\n\r\n        this._rotate((value) => {\r\n             // get right down block\r\n            return value.position.x > THRESHOLD;\r\n        }, (value, ratio) => {\r\n            RubiksCubeViewer._rotateAroundAxisX(value, coefficient * ratio * PI_2);\r\n        });\r\n\r\n        // const objects = this.cubes.filter((value) => value.position.x > THRESHOLD);\r\n        // objects.forEach((value) => {\r\n        //     const animation = new BABYLON.Animation('TEST', 'position.x', 10, BABYLON.Animation.ANIMATIONTYPE_FLOAT, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);\r\n        //     this.scene.beginDirectAnimation(value, [animation], 0, 2 * 10, true);\r\n        // });\r\n        // const animation = new BABYLON.Animation('TEST', 'position', 10, BABYLON.Animation.ANIMATIONTYPE_FLOAT, BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);\r\n    }\r\n\r\n\r\n    /**\r\n     * operate\r\n     */\r\n    /**\r\n     * startOperationQueue\r\n     */\r\n    public startAOperationQueue(operationQueue:string[]) {\r\n        if (this._isRunning) {\r\n            return;\r\n        }\r\n        this._operationQueue = operationQueue;\r\n        this.doingOperation();\r\n    }\r\n\r\n    public operate(operationChar: string) {\r\n        if (operationChar === null) {\r\n            return;\r\n        }\r\n        this._operationQueue.push(operationChar);\r\n        this.doingOperation();\r\n    }\r\n\r\n    /**\r\n     * doingOperation\r\n     */\r\n    public doingOperation() {\r\n        if (this._isRunning) {\r\n            return;\r\n        }\r\n        this._isRunning = true;\r\n\r\n        const handler = setInterval(()=>{\r\n            const operationChar = this._operationQueue[0];\r\n            if(operationChar === undefined) {\r\n                clearInterval(handler);\r\n                this._isRunning = false;\r\n                return;\r\n            }\r\n            switch (operationChar) {\r\n                case 'R':\r\n                    this.rotateRight(true);\r\n                    break;\r\n                case 'R2':\r\n                    this.rotateRight(true, 2);\r\n                    break;\r\n                case 'R\\'':\r\n                    this.rotateRight(false);\r\n                    break;\r\n                case 'R\\'2':\r\n                    this.rotateRight(false, 2);\r\n                    break;\r\n                case 'L':\r\n                    this.rotateLeft(true);\r\n                    break;\r\n                case 'L2':\r\n                    this.rotateLeft(true, 2);\r\n                    break;\r\n                case 'L\\'':\r\n                    this.rotateLeft(false);\r\n                    break;\r\n                case 'L\\'2':\r\n                    this.rotateLeft(false, 2);\r\n                    break;\r\n                case 'U':\r\n                    this.rotateUp(true);\r\n                    break;\r\n                case 'U2':\r\n                    this.rotateUp(true);\r\n                    break;\r\n                case 'U\\'':\r\n                    this.rotateUp(false);\r\n                    break;\r\n                case 'U\\'2':\r\n                    this.rotateUp(false, 2);\r\n                    break;\r\n                case 'F':\r\n                    this.rotateFront(true);\r\n                    break;\r\n                case 'F2':\r\n                    this.rotateFront(true, 2);\r\n                    break;\r\n                case 'F\\'':\r\n                    this.rotateFront(false);\r\n                    break;\r\n                case 'F\\'2':\r\n                    this.rotateFront(false, 2);\r\n                    break;\r\n                case 'D':\r\n                    this.rotateDown(true);\r\n                    break;\r\n                case 'D2':\r\n                    this.rotateDown(true, 2);\r\n                    break;\r\n                case 'D\\'':\r\n                    this.rotateDown(false);\r\n                    break;\r\n                case 'D\\'2':\r\n                    this.rotateDown(false, 2);\r\n                    break;\r\n                case 'B':\r\n                    this.rotateBack(true);\r\n                    break;\r\n                case 'B2':\r\n                    this.rotateBack(true, 2);\r\n                    break;\r\n                case 'B\\'':\r\n                    this.rotateBack(false);\r\n                    break;\r\n                case 'B\\'2':\r\n                    this.rotateBack(false, 2);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            this._operationQueue.splice(0, 1);\r\n        }, 800);\r\n    }\r\n\r\n    // private\r\n\r\n    private _generateRubiksCube() {\r\n        for (let x = -1; x <= 1; x++) {\r\n            for(let y = -1; y <= 1; y++) {\r\n                for(let z = -1; z <= 1; z++) {\r\n                    if (x === 0 && y === 0 && z === 0) {\r\n                        continue;\r\n                    }\r\n                    const box = BABYLON.Mesh.CreateBox('cube', 1, this.scene);\r\n                    box.material = this.multiMaterial;\r\n                    box.subMeshes = [];\r\n                    const verticesCount = box.getTotalVertices();\r\n                    box.subMeshes.push(new BABYLON.SubMesh(0, 0, verticesCount, 0, 6, box));\r\n                    box.subMeshes.push(new BABYLON.SubMesh(1, 1, verticesCount, 6, 6, box));\r\n                    box.subMeshes.push(new BABYLON.SubMesh(2, 2, verticesCount, 12, 6, box));\r\n                    box.subMeshes.push(new BABYLON.SubMesh(3, 3, verticesCount, 18, 6, box));\r\n                    box.subMeshes.push(new BABYLON.SubMesh(4, 4, verticesCount, 24, 6, box));\r\n                    box.subMeshes.push(new BABYLON.SubMesh(5, 5, verticesCount, 30, 6, box));\r\n                    box.position.set(x, y, z);\r\n                    this.cubes.push(box);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    private colorTexture(color:number) : BABYLON.Texture {\r\n        const canvas = document.createElement('canvas');\r\n        canvas.width = 256;\r\n        canvas.height = 256;\r\n        const context = canvas.getContext('2d');\r\n        if (context != null) {\r\n            // first use black draw into the background\r\n            context.fillStyle = '#000000';\r\n            context.fillRect(0, 0, 256, 256);\r\n            context.rect(20, 20, 216, 216);\r\n            context.lineJoin = 'round';\r\n            context.lineWidth = 10;\r\n\r\n            // then use the color draw into the background\r\n            const colorString = '#' + color.toString(16);\r\n            context.fillStyle = colorString;\r\n            context.strokeStyle = colorString;\r\n            context.stroke();\r\n            context.fill();\r\n        }\r\n        return new BABYLON.Texture(canvas.toDataURL(), this.scene);\r\n    }\r\n\r\n    // rotation core function by using high level function\r\n    private _rotate(filter:(value: BABYLON.Mesh) => boolean, rotation:(value: BABYLON.Mesh, ratio:number)=>void) {\r\n        // test if current animation do finish;\r\n        if (!this._didFinish) {\r\n            return;\r\n        }\r\n        // start next animation.\r\n        this._didFinish = false;\r\n\r\n        const objects = this.cubes.filter(filter);\r\n        this._anmate(500, (ratio:number) => {\r\n            for (const object of objects) {\r\n                rotation(object, ratio);\r\n            }\r\n        });\r\n    }\r\n\r\n    // rotation around X axis\r\n    private static _rotateAroundAxisX(object: BABYLON.Mesh, rad:number) {\r\n        const y = object.position.y;\r\n        const z = object.position.z;\r\n        object.rotation.x += rad;\r\n        object.position.y = Math.cos(rad) * y - Math.sin(rad) * z;\r\n        object.position.z = Math.cos(rad) * z + Math.sin(rad) * y;\r\n    }\r\n\r\n    // rotation around Y axis\r\n    private static _rotateAroundAxisY(object: BABYLON.Mesh, rad:number) {\r\n        const x = object.position.x;\r\n        const z = object.position.z;\r\n        object.rotation.y -= rad;\r\n        object.position.x = Math.cos(rad) * x - Math.sin(rad) * z;\r\n        object.position.z = Math.cos(rad) * z + Math.sin(rad) * x;\r\n    }\r\n\r\n    // rotation around Z axis\r\n    private static _rotateAroundAxisZ(object: BABYLON.Mesh, rad:number) {\r\n        const x = object.position.x;\r\n        const y = object.position.y;\r\n        object.rotation.z += rad;\r\n        object.position.x = Math.cos(rad) * x - Math.sin(rad) * y;\r\n        object.position.y = Math.cos(rad) * y + Math.sin(rad) * x;\r\n    }\r\n\r\n\r\n    // animate the rotate\r\n    // during : ms\r\n    private _anmate(during: number | 500, animating: (ratio:number)=>void) {\r\n        requestAnimationFrame((timestamp:number) => {\r\n            this._animationCore(during, timestamp, timestamp, timestamp, animating);\r\n        });\r\n    }\r\n\r\n    // the animate core function\r\n    private _animationCore(during:number, startTimestamp:number, previousTimestamp:number,currentTimestamp:number, animating: (ratio:number)=>void) {\r\n        // check if diff bigger than during, and correct the timestamp\r\n        const correction = currentTimestamp - startTimestamp >= during ?(startTimestamp + during) : currentTimestamp;\r\n\r\n        // get the diff of contiguous frames\r\n        const diff = correction - previousTimestamp;\r\n\r\n        // run the animating clouse\r\n        animating(diff / during);\r\n\r\n        // run animation frame\r\n        const handler = requestAnimationFrame((timestamp:number) => {\r\n            this._animationCore(during, startTimestamp, currentTimestamp, timestamp, animating);\r\n        });\r\n\r\n        // diff is current timestamp - start timestamp\r\n        // check if diff bigger than during\r\n        if (currentTimestamp - startTimestamp >= during) {\r\n            cancelAnimationFrame(handler);\r\n            this._didFinish = true;\r\n        }\r\n    }\r\n}\r\n","import * as React from 'react';\nimport { RubiksCubeViewer } from \"./modules/rubiks-cube-viewer\";\nimport './App.css';\n// import {Slider} from \"@material-ui/core\";\n\n\nclass App extends React.Component<{}, any> {\n\n    public viewer!: RubiksCubeViewer;\n\n    public allOperations = [\n        'L', 'L\\'', 'L2', 'L\\'2',\n        'R', 'R\\'', 'R2', 'R\\'2',\n        'U', 'U\\'', 'U2', 'U\\'2',\n        'D', 'D\\'', 'D2', 'D\\'2',\n        'F', 'F\\'', 'F2', 'F\\'2',\n        'B', 'B\\'', 'B2', 'B\\'2'\n    ];\n\n\n    get cameraWheel() {\n        if (this.viewer && this.viewer.camera) {\n            return this.viewer.camera.wheelPrecision;\n        }\n        return 0;\n    }\n\n    set cameraWheel(value: number) {\n        if (this.viewer && this.viewer.camera) {\n            this.viewer.camera.wheelPrecision = value;\n        }\n    }\n\n    constructor (props: {}) {\n        super(props);\n        this.state = {\n            steps: ''\n        };\n    }\n\n    public componentDidMount() {\n        this.viewer = new RubiksCubeViewer(document.getElementById('cube-container') as HTMLElement);\n    }\n\n    public componentWillUnmount(): void {\n        this.viewer.destroy();\n    }\n\n    public render() {\n        return (\n        <div className=\"App\">\n            <div id=\"cube-container\" className=\"CubeContainer\"/>\n            <div id=\"steps-content\">{this.state.steps}</div>\n            <footer className=\"CubeButtons\">\n                <button onClick={this.disrupt}>25 STEP DISRUPT</button>\n                <button onClick={this.rotateFront}>F</button>\n                <button onClick={this.rotateUp}>U</button>\n                <button onClick={this.rotateLeft}>L</button>\n                <button onClick={this.rotateRight}>R</button>\n                <button onClick={this.rotateDown}>D</button>\n                <button onClick={this.rotateBack}>B</button>\n                <button onClick={this.rotateFront}>F'</button>\n                <button onClick={this.rotateUp}>U'</button>\n                <button onClick={this.rotateLeft}>L'</button>\n                <button onClick={this.rotateRight}>R'</button>\n                <button onClick={this.rotateDown}>D'</button>\n                <button onClick={this.rotateBack}>B'</button>\n                <button onClick={this.reset}>reset</button>\n            </footer>\n            {/*<Slider*/}\n            {/*    value={this.cameraWheel}*/}\n            {/*    onChange={this.onChange}*/}\n            {/*    aria-labelledby=\"continuous-slider\"*/}\n            {/*    min={0}*/}\n            {/*    max={10000}*/}\n            {/*/>*/}\n        </div>\n        );\n    }\n\n    // onChange = (event: any, newValue: number | number[]) => {\n    //     console.log(newValue);\n    //     this.cameraWheel = newValue as number;\n    // }\n\n    // this algorithm is wrong...\n    // I am trying to think another one..\n    private disrupt = () => {\n        let steps = '';\n        const operationQueue = [];\n        for (let index = 0; index < 25; index++) {\n            const number = (Math.floor(100 * Math.random())) % 24;\n            const operation = this.allOperations[number];\n            operationQueue.push(this.allOperations[number]);\n            steps += operation + ' ';\n        }\n        this.setState({steps});\n        this.viewer.startAOperationQueue(operationQueue);\n    }\n\n    private reset = (event:React.MouseEvent) => {\n        this.viewer.reset();\n    }\n    private rotateFront = (event:React.MouseEvent) => {\n        const textContent = (event.target as HTMLElement).textContent;\n        this.viewer.operate(textContent as string);\n    }\n    private rotateUp = (event:React.MouseEvent) => {\n        const textContent = (event.target as HTMLElement).textContent;\n        this.viewer.operate(textContent as string);\n    }\n    private rotateLeft = (event:React.MouseEvent) => {\n        const textContent = (event.target as HTMLElement).textContent;\n        this.viewer.operate(textContent as string);\n    }\n    private rotateRight = (event:React.MouseEvent) => {\n        const textContent = (event.target as HTMLElement).textContent;\n        this.viewer.operate(textContent as string);\n    }\n    private rotateDown = (event:React.MouseEvent) => {\n        const textContent = (event.target as HTMLElement).textContent;\n        this.viewer.operate(textContent as string);\n    }\n    private rotateBack = (event:React.MouseEvent) => {\n        const textContent = (event.target as HTMLElement).textContent;\n        this.viewer.operate(textContent as string);\n    }\n}\n\nexport default App;\n","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL!,\n            window.location.toString()\n        );\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Lets check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://goo.gl/SC7cgQ'\n                    );\n                });\n            } else {\n                // Is not local host. Just register service worker\n                registerValidSW(swUrl);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker) {\n                    installingWorker.onstatechange = () => {\n                        if (installingWorker.state === 'installed') {\n                            if (navigator.serviceWorker.controller) {\n                                // At this point, the old content will have been purged and\n                                // the fresh content will have been added to the cache.\n                                // It's the perfect time to display a 'New content is\n                                // available; please refresh.' message in your web app.\n                                console.log('New content is available; please refresh.');\n                            } else {\n                                // At this point, everything has been precached.\n                                // It's the perfect time to display a\n                                // 'Content is cached for offline use.' message.\n                                console.log('Content is cached for offline use.');\n                            }\n                        }\n                    };\n                }\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            if (\n                response.status === 404 ||\n                response.headers.get('content-type')!.indexOf('javascript') === -1\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root') as HTMLElement\n);\nregisterServiceWorker();\n"],"sourceRoot":""}